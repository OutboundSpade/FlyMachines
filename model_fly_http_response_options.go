/*
Machines API

This site hosts documentation generated from the Fly.io Machines API OpenAPI specification. Visit our complete [Machines API docs](https://fly.io/docs/machines/api/) for how to get started, more information about each endpoint, parameter descriptions, and examples.

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package machines

import (
	"encoding/json"
)

// checks if the FlyHTTPResponseOptions type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &FlyHTTPResponseOptions{}

// FlyHTTPResponseOptions struct for FlyHTTPResponseOptions
type FlyHTTPResponseOptions struct {
	Headers map[string]map[string]interface{} `json:"headers,omitempty"`
	Pristine *bool `json:"pristine,omitempty"`
}

// NewFlyHTTPResponseOptions instantiates a new FlyHTTPResponseOptions object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFlyHTTPResponseOptions() *FlyHTTPResponseOptions {
	this := FlyHTTPResponseOptions{}
	return &this
}

// NewFlyHTTPResponseOptionsWithDefaults instantiates a new FlyHTTPResponseOptions object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFlyHTTPResponseOptionsWithDefaults() *FlyHTTPResponseOptions {
	this := FlyHTTPResponseOptions{}
	return &this
}

// GetHeaders returns the Headers field value if set, zero value otherwise.
func (o *FlyHTTPResponseOptions) GetHeaders() map[string]map[string]interface{} {
	if o == nil || IsNil(o.Headers) {
		var ret map[string]map[string]interface{}
		return ret
	}
	return o.Headers
}

// GetHeadersOk returns a tuple with the Headers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FlyHTTPResponseOptions) GetHeadersOk() (map[string]map[string]interface{}, bool) {
	if o == nil || IsNil(o.Headers) {
		return map[string]map[string]interface{}{}, false
	}
	return o.Headers, true
}

// HasHeaders returns a boolean if a field has been set.
func (o *FlyHTTPResponseOptions) HasHeaders() bool {
	if o != nil && !IsNil(o.Headers) {
		return true
	}

	return false
}

// SetHeaders gets a reference to the given map[string]map[string]interface{} and assigns it to the Headers field.
func (o *FlyHTTPResponseOptions) SetHeaders(v map[string]map[string]interface{}) {
	o.Headers = v
}

// GetPristine returns the Pristine field value if set, zero value otherwise.
func (o *FlyHTTPResponseOptions) GetPristine() bool {
	if o == nil || IsNil(o.Pristine) {
		var ret bool
		return ret
	}
	return *o.Pristine
}

// GetPristineOk returns a tuple with the Pristine field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FlyHTTPResponseOptions) GetPristineOk() (*bool, bool) {
	if o == nil || IsNil(o.Pristine) {
		return nil, false
	}
	return o.Pristine, true
}

// HasPristine returns a boolean if a field has been set.
func (o *FlyHTTPResponseOptions) HasPristine() bool {
	if o != nil && !IsNil(o.Pristine) {
		return true
	}

	return false
}

// SetPristine gets a reference to the given bool and assigns it to the Pristine field.
func (o *FlyHTTPResponseOptions) SetPristine(v bool) {
	o.Pristine = &v
}

func (o FlyHTTPResponseOptions) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o FlyHTTPResponseOptions) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Headers) {
		toSerialize["headers"] = o.Headers
	}
	if !IsNil(o.Pristine) {
		toSerialize["pristine"] = o.Pristine
	}
	return toSerialize, nil
}

type NullableFlyHTTPResponseOptions struct {
	value *FlyHTTPResponseOptions
	isSet bool
}

func (v NullableFlyHTTPResponseOptions) Get() *FlyHTTPResponseOptions {
	return v.value
}

func (v *NullableFlyHTTPResponseOptions) Set(val *FlyHTTPResponseOptions) {
	v.value = val
	v.isSet = true
}

func (v NullableFlyHTTPResponseOptions) IsSet() bool {
	return v.isSet
}

func (v *NullableFlyHTTPResponseOptions) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFlyHTTPResponseOptions(val *FlyHTTPResponseOptions) *NullableFlyHTTPResponseOptions {
	return &NullableFlyHTTPResponseOptions{value: val, isSet: true}
}

func (v NullableFlyHTTPResponseOptions) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFlyHTTPResponseOptions) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


