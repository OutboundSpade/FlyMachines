/*
Machines API

This site hosts documentation generated from the Fly.io Machines API OpenAPI specification. Visit our complete [Machines API docs](https://fly.io/docs/machines/api/) for how to get started, more information about each endpoint, parameter descriptions, and examples.

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package machines

import (
	"encoding/json"
)

// checks if the FlyMachineRestart type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &FlyMachineRestart{}

// FlyMachineRestart The Machine restart policy defines whether and how flyd restarts a Machine after its main process exits. See https://fly.io/docs/machines/guides-examples/machine-restart-policy/.
type FlyMachineRestart struct {
	// GPU bid price for spot Machines.
	GpuBidPrice *float32 `json:"gpu_bid_price,omitempty"`
	// When policy is on-failure, the maximum number of times to attempt to restart the Machine before letting it stop.
	MaxRetries *int32 `json:"max_retries,omitempty"`
	// * no - Never try to restart a Machine automatically when its main process exits, whether thatâ€™s on purpose or on a crash. * always - Always restart a Machine automatically and never let it enter a stopped state, even when the main process exits cleanly. * on-failure - Try up to MaxRetries times to automatically restart the Machine if it exits with a non-zero exit code. Default when no explicit policy is set, and for Machines with schedules. * spot-price - Starts the Machine only when there is capacity and the spot price is less than or equal to the bid price.
	Policy *string `json:"policy,omitempty"`
}

// NewFlyMachineRestart instantiates a new FlyMachineRestart object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFlyMachineRestart() *FlyMachineRestart {
	this := FlyMachineRestart{}
	return &this
}

// NewFlyMachineRestartWithDefaults instantiates a new FlyMachineRestart object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFlyMachineRestartWithDefaults() *FlyMachineRestart {
	this := FlyMachineRestart{}
	return &this
}

// GetGpuBidPrice returns the GpuBidPrice field value if set, zero value otherwise.
func (o *FlyMachineRestart) GetGpuBidPrice() float32 {
	if o == nil || IsNil(o.GpuBidPrice) {
		var ret float32
		return ret
	}
	return *o.GpuBidPrice
}

// GetGpuBidPriceOk returns a tuple with the GpuBidPrice field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FlyMachineRestart) GetGpuBidPriceOk() (*float32, bool) {
	if o == nil || IsNil(o.GpuBidPrice) {
		return nil, false
	}
	return o.GpuBidPrice, true
}

// HasGpuBidPrice returns a boolean if a field has been set.
func (o *FlyMachineRestart) HasGpuBidPrice() bool {
	if o != nil && !IsNil(o.GpuBidPrice) {
		return true
	}

	return false
}

// SetGpuBidPrice gets a reference to the given float32 and assigns it to the GpuBidPrice field.
func (o *FlyMachineRestart) SetGpuBidPrice(v float32) {
	o.GpuBidPrice = &v
}

// GetMaxRetries returns the MaxRetries field value if set, zero value otherwise.
func (o *FlyMachineRestart) GetMaxRetries() int32 {
	if o == nil || IsNil(o.MaxRetries) {
		var ret int32
		return ret
	}
	return *o.MaxRetries
}

// GetMaxRetriesOk returns a tuple with the MaxRetries field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FlyMachineRestart) GetMaxRetriesOk() (*int32, bool) {
	if o == nil || IsNil(o.MaxRetries) {
		return nil, false
	}
	return o.MaxRetries, true
}

// HasMaxRetries returns a boolean if a field has been set.
func (o *FlyMachineRestart) HasMaxRetries() bool {
	if o != nil && !IsNil(o.MaxRetries) {
		return true
	}

	return false
}

// SetMaxRetries gets a reference to the given int32 and assigns it to the MaxRetries field.
func (o *FlyMachineRestart) SetMaxRetries(v int32) {
	o.MaxRetries = &v
}

// GetPolicy returns the Policy field value if set, zero value otherwise.
func (o *FlyMachineRestart) GetPolicy() string {
	if o == nil || IsNil(o.Policy) {
		var ret string
		return ret
	}
	return *o.Policy
}

// GetPolicyOk returns a tuple with the Policy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FlyMachineRestart) GetPolicyOk() (*string, bool) {
	if o == nil || IsNil(o.Policy) {
		return nil, false
	}
	return o.Policy, true
}

// HasPolicy returns a boolean if a field has been set.
func (o *FlyMachineRestart) HasPolicy() bool {
	if o != nil && !IsNil(o.Policy) {
		return true
	}

	return false
}

// SetPolicy gets a reference to the given string and assigns it to the Policy field.
func (o *FlyMachineRestart) SetPolicy(v string) {
	o.Policy = &v
}

func (o FlyMachineRestart) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o FlyMachineRestart) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.GpuBidPrice) {
		toSerialize["gpu_bid_price"] = o.GpuBidPrice
	}
	if !IsNil(o.MaxRetries) {
		toSerialize["max_retries"] = o.MaxRetries
	}
	if !IsNil(o.Policy) {
		toSerialize["policy"] = o.Policy
	}
	return toSerialize, nil
}

type NullableFlyMachineRestart struct {
	value *FlyMachineRestart
	isSet bool
}

func (v NullableFlyMachineRestart) Get() *FlyMachineRestart {
	return v.value
}

func (v *NullableFlyMachineRestart) Set(val *FlyMachineRestart) {
	v.value = val
	v.isSet = true
}

func (v NullableFlyMachineRestart) IsSet() bool {
	return v.isSet
}

func (v *NullableFlyMachineRestart) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFlyMachineRestart(val *FlyMachineRestart) *NullableFlyMachineRestart {
	return &NullableFlyMachineRestart{value: val, isSet: true}
}

func (v NullableFlyMachineRestart) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFlyMachineRestart) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


