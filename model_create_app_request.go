/*
Machines API

This site hosts documentation generated from the Fly.io Machines API OpenAPI specification. Visit our complete [Machines API docs](https://fly.io/docs/machines/api/) for how to get started, more information about each endpoint, parameter descriptions, and examples.

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package machines

import (
	"encoding/json"
)

// checks if the CreateAppRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateAppRequest{}

// CreateAppRequest struct for CreateAppRequest
type CreateAppRequest struct {
	AppName *string `json:"app_name,omitempty"`
	EnableSubdomains *bool `json:"enable_subdomains,omitempty"`
	Network *string `json:"network,omitempty"`
	OrgSlug *string `json:"org_slug,omitempty"`
}

// NewCreateAppRequest instantiates a new CreateAppRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateAppRequest() *CreateAppRequest {
	this := CreateAppRequest{}
	return &this
}

// NewCreateAppRequestWithDefaults instantiates a new CreateAppRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateAppRequestWithDefaults() *CreateAppRequest {
	this := CreateAppRequest{}
	return &this
}

// GetAppName returns the AppName field value if set, zero value otherwise.
func (o *CreateAppRequest) GetAppName() string {
	if o == nil || IsNil(o.AppName) {
		var ret string
		return ret
	}
	return *o.AppName
}

// GetAppNameOk returns a tuple with the AppName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateAppRequest) GetAppNameOk() (*string, bool) {
	if o == nil || IsNil(o.AppName) {
		return nil, false
	}
	return o.AppName, true
}

// HasAppName returns a boolean if a field has been set.
func (o *CreateAppRequest) HasAppName() bool {
	if o != nil && !IsNil(o.AppName) {
		return true
	}

	return false
}

// SetAppName gets a reference to the given string and assigns it to the AppName field.
func (o *CreateAppRequest) SetAppName(v string) {
	o.AppName = &v
}

// GetEnableSubdomains returns the EnableSubdomains field value if set, zero value otherwise.
func (o *CreateAppRequest) GetEnableSubdomains() bool {
	if o == nil || IsNil(o.EnableSubdomains) {
		var ret bool
		return ret
	}
	return *o.EnableSubdomains
}

// GetEnableSubdomainsOk returns a tuple with the EnableSubdomains field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateAppRequest) GetEnableSubdomainsOk() (*bool, bool) {
	if o == nil || IsNil(o.EnableSubdomains) {
		return nil, false
	}
	return o.EnableSubdomains, true
}

// HasEnableSubdomains returns a boolean if a field has been set.
func (o *CreateAppRequest) HasEnableSubdomains() bool {
	if o != nil && !IsNil(o.EnableSubdomains) {
		return true
	}

	return false
}

// SetEnableSubdomains gets a reference to the given bool and assigns it to the EnableSubdomains field.
func (o *CreateAppRequest) SetEnableSubdomains(v bool) {
	o.EnableSubdomains = &v
}

// GetNetwork returns the Network field value if set, zero value otherwise.
func (o *CreateAppRequest) GetNetwork() string {
	if o == nil || IsNil(o.Network) {
		var ret string
		return ret
	}
	return *o.Network
}

// GetNetworkOk returns a tuple with the Network field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateAppRequest) GetNetworkOk() (*string, bool) {
	if o == nil || IsNil(o.Network) {
		return nil, false
	}
	return o.Network, true
}

// HasNetwork returns a boolean if a field has been set.
func (o *CreateAppRequest) HasNetwork() bool {
	if o != nil && !IsNil(o.Network) {
		return true
	}

	return false
}

// SetNetwork gets a reference to the given string and assigns it to the Network field.
func (o *CreateAppRequest) SetNetwork(v string) {
	o.Network = &v
}

// GetOrgSlug returns the OrgSlug field value if set, zero value otherwise.
func (o *CreateAppRequest) GetOrgSlug() string {
	if o == nil || IsNil(o.OrgSlug) {
		var ret string
		return ret
	}
	return *o.OrgSlug
}

// GetOrgSlugOk returns a tuple with the OrgSlug field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateAppRequest) GetOrgSlugOk() (*string, bool) {
	if o == nil || IsNil(o.OrgSlug) {
		return nil, false
	}
	return o.OrgSlug, true
}

// HasOrgSlug returns a boolean if a field has been set.
func (o *CreateAppRequest) HasOrgSlug() bool {
	if o != nil && !IsNil(o.OrgSlug) {
		return true
	}

	return false
}

// SetOrgSlug gets a reference to the given string and assigns it to the OrgSlug field.
func (o *CreateAppRequest) SetOrgSlug(v string) {
	o.OrgSlug = &v
}

func (o CreateAppRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateAppRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AppName) {
		toSerialize["app_name"] = o.AppName
	}
	if !IsNil(o.EnableSubdomains) {
		toSerialize["enable_subdomains"] = o.EnableSubdomains
	}
	if !IsNil(o.Network) {
		toSerialize["network"] = o.Network
	}
	if !IsNil(o.OrgSlug) {
		toSerialize["org_slug"] = o.OrgSlug
	}
	return toSerialize, nil
}

type NullableCreateAppRequest struct {
	value *CreateAppRequest
	isSet bool
}

func (v NullableCreateAppRequest) Get() *CreateAppRequest {
	return v.value
}

func (v *NullableCreateAppRequest) Set(val *CreateAppRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateAppRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateAppRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateAppRequest(val *CreateAppRequest) *NullableCreateAppRequest {
	return &NullableCreateAppRequest{value: val, isSet: true}
}

func (v NullableCreateAppRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateAppRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


