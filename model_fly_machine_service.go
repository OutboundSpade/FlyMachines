/*
Machines API

This site hosts documentation generated from the Fly.io Machines API OpenAPI specification. Visit our complete [Machines API docs](https://fly.io/docs/machines/api/) for how to get started, more information about each endpoint, parameter descriptions, and examples.

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package machines

import (
	"encoding/json"
)

// checks if the FlyMachineService type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &FlyMachineService{}

// FlyMachineService struct for FlyMachineService
type FlyMachineService struct {
	Autostart *bool `json:"autostart,omitempty"`
	// Accepts a string (new format) or a boolean (old format). For backward compatibility with older clients, the API continues to use booleans for \"off\" and \"stop\" in responses. * \"off\" or false - Do not autostop the Machine. * \"stop\" or true - Automatically stop the Machine. * \"suspend\" - Automatically suspend the Machine, falling back to a full stop if this is not possible.
	Autostop *string `json:"autostop,omitempty"`
	Checks []FlyMachineCheck `json:"checks,omitempty"`
	Concurrency *FlyMachineServiceConcurrency `json:"concurrency,omitempty"`
	ForceInstanceDescription *string `json:"force_instance_description,omitempty"`
	ForceInstanceKey *string `json:"force_instance_key,omitempty"`
	InternalPort *int32 `json:"internal_port,omitempty"`
	MinMachinesRunning *int32 `json:"min_machines_running,omitempty"`
	Ports []FlyMachinePort `json:"ports,omitempty"`
	Protocol *string `json:"protocol,omitempty"`
}

// NewFlyMachineService instantiates a new FlyMachineService object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFlyMachineService() *FlyMachineService {
	this := FlyMachineService{}
	return &this
}

// NewFlyMachineServiceWithDefaults instantiates a new FlyMachineService object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFlyMachineServiceWithDefaults() *FlyMachineService {
	this := FlyMachineService{}
	return &this
}

// GetAutostart returns the Autostart field value if set, zero value otherwise.
func (o *FlyMachineService) GetAutostart() bool {
	if o == nil || IsNil(o.Autostart) {
		var ret bool
		return ret
	}
	return *o.Autostart
}

// GetAutostartOk returns a tuple with the Autostart field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FlyMachineService) GetAutostartOk() (*bool, bool) {
	if o == nil || IsNil(o.Autostart) {
		return nil, false
	}
	return o.Autostart, true
}

// HasAutostart returns a boolean if a field has been set.
func (o *FlyMachineService) HasAutostart() bool {
	if o != nil && !IsNil(o.Autostart) {
		return true
	}

	return false
}

// SetAutostart gets a reference to the given bool and assigns it to the Autostart field.
func (o *FlyMachineService) SetAutostart(v bool) {
	o.Autostart = &v
}

// GetAutostop returns the Autostop field value if set, zero value otherwise.
func (o *FlyMachineService) GetAutostop() string {
	if o == nil || IsNil(o.Autostop) {
		var ret string
		return ret
	}
	return *o.Autostop
}

// GetAutostopOk returns a tuple with the Autostop field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FlyMachineService) GetAutostopOk() (*string, bool) {
	if o == nil || IsNil(o.Autostop) {
		return nil, false
	}
	return o.Autostop, true
}

// HasAutostop returns a boolean if a field has been set.
func (o *FlyMachineService) HasAutostop() bool {
	if o != nil && !IsNil(o.Autostop) {
		return true
	}

	return false
}

// SetAutostop gets a reference to the given string and assigns it to the Autostop field.
func (o *FlyMachineService) SetAutostop(v string) {
	o.Autostop = &v
}

// GetChecks returns the Checks field value if set, zero value otherwise.
func (o *FlyMachineService) GetChecks() []FlyMachineCheck {
	if o == nil || IsNil(o.Checks) {
		var ret []FlyMachineCheck
		return ret
	}
	return o.Checks
}

// GetChecksOk returns a tuple with the Checks field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FlyMachineService) GetChecksOk() ([]FlyMachineCheck, bool) {
	if o == nil || IsNil(o.Checks) {
		return nil, false
	}
	return o.Checks, true
}

// HasChecks returns a boolean if a field has been set.
func (o *FlyMachineService) HasChecks() bool {
	if o != nil && !IsNil(o.Checks) {
		return true
	}

	return false
}

// SetChecks gets a reference to the given []FlyMachineCheck and assigns it to the Checks field.
func (o *FlyMachineService) SetChecks(v []FlyMachineCheck) {
	o.Checks = v
}

// GetConcurrency returns the Concurrency field value if set, zero value otherwise.
func (o *FlyMachineService) GetConcurrency() FlyMachineServiceConcurrency {
	if o == nil || IsNil(o.Concurrency) {
		var ret FlyMachineServiceConcurrency
		return ret
	}
	return *o.Concurrency
}

// GetConcurrencyOk returns a tuple with the Concurrency field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FlyMachineService) GetConcurrencyOk() (*FlyMachineServiceConcurrency, bool) {
	if o == nil || IsNil(o.Concurrency) {
		return nil, false
	}
	return o.Concurrency, true
}

// HasConcurrency returns a boolean if a field has been set.
func (o *FlyMachineService) HasConcurrency() bool {
	if o != nil && !IsNil(o.Concurrency) {
		return true
	}

	return false
}

// SetConcurrency gets a reference to the given FlyMachineServiceConcurrency and assigns it to the Concurrency field.
func (o *FlyMachineService) SetConcurrency(v FlyMachineServiceConcurrency) {
	o.Concurrency = &v
}

// GetForceInstanceDescription returns the ForceInstanceDescription field value if set, zero value otherwise.
func (o *FlyMachineService) GetForceInstanceDescription() string {
	if o == nil || IsNil(o.ForceInstanceDescription) {
		var ret string
		return ret
	}
	return *o.ForceInstanceDescription
}

// GetForceInstanceDescriptionOk returns a tuple with the ForceInstanceDescription field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FlyMachineService) GetForceInstanceDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.ForceInstanceDescription) {
		return nil, false
	}
	return o.ForceInstanceDescription, true
}

// HasForceInstanceDescription returns a boolean if a field has been set.
func (o *FlyMachineService) HasForceInstanceDescription() bool {
	if o != nil && !IsNil(o.ForceInstanceDescription) {
		return true
	}

	return false
}

// SetForceInstanceDescription gets a reference to the given string and assigns it to the ForceInstanceDescription field.
func (o *FlyMachineService) SetForceInstanceDescription(v string) {
	o.ForceInstanceDescription = &v
}

// GetForceInstanceKey returns the ForceInstanceKey field value if set, zero value otherwise.
func (o *FlyMachineService) GetForceInstanceKey() string {
	if o == nil || IsNil(o.ForceInstanceKey) {
		var ret string
		return ret
	}
	return *o.ForceInstanceKey
}

// GetForceInstanceKeyOk returns a tuple with the ForceInstanceKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FlyMachineService) GetForceInstanceKeyOk() (*string, bool) {
	if o == nil || IsNil(o.ForceInstanceKey) {
		return nil, false
	}
	return o.ForceInstanceKey, true
}

// HasForceInstanceKey returns a boolean if a field has been set.
func (o *FlyMachineService) HasForceInstanceKey() bool {
	if o != nil && !IsNil(o.ForceInstanceKey) {
		return true
	}

	return false
}

// SetForceInstanceKey gets a reference to the given string and assigns it to the ForceInstanceKey field.
func (o *FlyMachineService) SetForceInstanceKey(v string) {
	o.ForceInstanceKey = &v
}

// GetInternalPort returns the InternalPort field value if set, zero value otherwise.
func (o *FlyMachineService) GetInternalPort() int32 {
	if o == nil || IsNil(o.InternalPort) {
		var ret int32
		return ret
	}
	return *o.InternalPort
}

// GetInternalPortOk returns a tuple with the InternalPort field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FlyMachineService) GetInternalPortOk() (*int32, bool) {
	if o == nil || IsNil(o.InternalPort) {
		return nil, false
	}
	return o.InternalPort, true
}

// HasInternalPort returns a boolean if a field has been set.
func (o *FlyMachineService) HasInternalPort() bool {
	if o != nil && !IsNil(o.InternalPort) {
		return true
	}

	return false
}

// SetInternalPort gets a reference to the given int32 and assigns it to the InternalPort field.
func (o *FlyMachineService) SetInternalPort(v int32) {
	o.InternalPort = &v
}

// GetMinMachinesRunning returns the MinMachinesRunning field value if set, zero value otherwise.
func (o *FlyMachineService) GetMinMachinesRunning() int32 {
	if o == nil || IsNil(o.MinMachinesRunning) {
		var ret int32
		return ret
	}
	return *o.MinMachinesRunning
}

// GetMinMachinesRunningOk returns a tuple with the MinMachinesRunning field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FlyMachineService) GetMinMachinesRunningOk() (*int32, bool) {
	if o == nil || IsNil(o.MinMachinesRunning) {
		return nil, false
	}
	return o.MinMachinesRunning, true
}

// HasMinMachinesRunning returns a boolean if a field has been set.
func (o *FlyMachineService) HasMinMachinesRunning() bool {
	if o != nil && !IsNil(o.MinMachinesRunning) {
		return true
	}

	return false
}

// SetMinMachinesRunning gets a reference to the given int32 and assigns it to the MinMachinesRunning field.
func (o *FlyMachineService) SetMinMachinesRunning(v int32) {
	o.MinMachinesRunning = &v
}

// GetPorts returns the Ports field value if set, zero value otherwise.
func (o *FlyMachineService) GetPorts() []FlyMachinePort {
	if o == nil || IsNil(o.Ports) {
		var ret []FlyMachinePort
		return ret
	}
	return o.Ports
}

// GetPortsOk returns a tuple with the Ports field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FlyMachineService) GetPortsOk() ([]FlyMachinePort, bool) {
	if o == nil || IsNil(o.Ports) {
		return nil, false
	}
	return o.Ports, true
}

// HasPorts returns a boolean if a field has been set.
func (o *FlyMachineService) HasPorts() bool {
	if o != nil && !IsNil(o.Ports) {
		return true
	}

	return false
}

// SetPorts gets a reference to the given []FlyMachinePort and assigns it to the Ports field.
func (o *FlyMachineService) SetPorts(v []FlyMachinePort) {
	o.Ports = v
}

// GetProtocol returns the Protocol field value if set, zero value otherwise.
func (o *FlyMachineService) GetProtocol() string {
	if o == nil || IsNil(o.Protocol) {
		var ret string
		return ret
	}
	return *o.Protocol
}

// GetProtocolOk returns a tuple with the Protocol field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FlyMachineService) GetProtocolOk() (*string, bool) {
	if o == nil || IsNil(o.Protocol) {
		return nil, false
	}
	return o.Protocol, true
}

// HasProtocol returns a boolean if a field has been set.
func (o *FlyMachineService) HasProtocol() bool {
	if o != nil && !IsNil(o.Protocol) {
		return true
	}

	return false
}

// SetProtocol gets a reference to the given string and assigns it to the Protocol field.
func (o *FlyMachineService) SetProtocol(v string) {
	o.Protocol = &v
}

func (o FlyMachineService) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o FlyMachineService) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Autostart) {
		toSerialize["autostart"] = o.Autostart
	}
	if !IsNil(o.Autostop) {
		toSerialize["autostop"] = o.Autostop
	}
	if !IsNil(o.Checks) {
		toSerialize["checks"] = o.Checks
	}
	if !IsNil(o.Concurrency) {
		toSerialize["concurrency"] = o.Concurrency
	}
	if !IsNil(o.ForceInstanceDescription) {
		toSerialize["force_instance_description"] = o.ForceInstanceDescription
	}
	if !IsNil(o.ForceInstanceKey) {
		toSerialize["force_instance_key"] = o.ForceInstanceKey
	}
	if !IsNil(o.InternalPort) {
		toSerialize["internal_port"] = o.InternalPort
	}
	if !IsNil(o.MinMachinesRunning) {
		toSerialize["min_machines_running"] = o.MinMachinesRunning
	}
	if !IsNil(o.Ports) {
		toSerialize["ports"] = o.Ports
	}
	if !IsNil(o.Protocol) {
		toSerialize["protocol"] = o.Protocol
	}
	return toSerialize, nil
}

type NullableFlyMachineService struct {
	value *FlyMachineService
	isSet bool
}

func (v NullableFlyMachineService) Get() *FlyMachineService {
	return v.value
}

func (v *NullableFlyMachineService) Set(val *FlyMachineService) {
	v.value = val
	v.isSet = true
}

func (v NullableFlyMachineService) IsSet() bool {
	return v.isSet
}

func (v *NullableFlyMachineService) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFlyMachineService(val *FlyMachineService) *NullableFlyMachineService {
	return &NullableFlyMachineService{value: val, isSet: true}
}

func (v NullableFlyMachineService) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFlyMachineService) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


