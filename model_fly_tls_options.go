/*
Machines API

This site hosts documentation generated from the Fly.io Machines API OpenAPI specification. Visit our complete [Machines API docs](https://fly.io/docs/machines/api/) for how to get started, more information about each endpoint, parameter descriptions, and examples.

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package machines

import (
	"encoding/json"
)

// checks if the FlyTLSOptions type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &FlyTLSOptions{}

// FlyTLSOptions struct for FlyTLSOptions
type FlyTLSOptions struct {
	Alpn []string `json:"alpn,omitempty"`
	DefaultSelfSigned *bool `json:"default_self_signed,omitempty"`
	Versions []string `json:"versions,omitempty"`
}

// NewFlyTLSOptions instantiates a new FlyTLSOptions object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFlyTLSOptions() *FlyTLSOptions {
	this := FlyTLSOptions{}
	return &this
}

// NewFlyTLSOptionsWithDefaults instantiates a new FlyTLSOptions object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFlyTLSOptionsWithDefaults() *FlyTLSOptions {
	this := FlyTLSOptions{}
	return &this
}

// GetAlpn returns the Alpn field value if set, zero value otherwise.
func (o *FlyTLSOptions) GetAlpn() []string {
	if o == nil || IsNil(o.Alpn) {
		var ret []string
		return ret
	}
	return o.Alpn
}

// GetAlpnOk returns a tuple with the Alpn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FlyTLSOptions) GetAlpnOk() ([]string, bool) {
	if o == nil || IsNil(o.Alpn) {
		return nil, false
	}
	return o.Alpn, true
}

// HasAlpn returns a boolean if a field has been set.
func (o *FlyTLSOptions) HasAlpn() bool {
	if o != nil && !IsNil(o.Alpn) {
		return true
	}

	return false
}

// SetAlpn gets a reference to the given []string and assigns it to the Alpn field.
func (o *FlyTLSOptions) SetAlpn(v []string) {
	o.Alpn = v
}

// GetDefaultSelfSigned returns the DefaultSelfSigned field value if set, zero value otherwise.
func (o *FlyTLSOptions) GetDefaultSelfSigned() bool {
	if o == nil || IsNil(o.DefaultSelfSigned) {
		var ret bool
		return ret
	}
	return *o.DefaultSelfSigned
}

// GetDefaultSelfSignedOk returns a tuple with the DefaultSelfSigned field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FlyTLSOptions) GetDefaultSelfSignedOk() (*bool, bool) {
	if o == nil || IsNil(o.DefaultSelfSigned) {
		return nil, false
	}
	return o.DefaultSelfSigned, true
}

// HasDefaultSelfSigned returns a boolean if a field has been set.
func (o *FlyTLSOptions) HasDefaultSelfSigned() bool {
	if o != nil && !IsNil(o.DefaultSelfSigned) {
		return true
	}

	return false
}

// SetDefaultSelfSigned gets a reference to the given bool and assigns it to the DefaultSelfSigned field.
func (o *FlyTLSOptions) SetDefaultSelfSigned(v bool) {
	o.DefaultSelfSigned = &v
}

// GetVersions returns the Versions field value if set, zero value otherwise.
func (o *FlyTLSOptions) GetVersions() []string {
	if o == nil || IsNil(o.Versions) {
		var ret []string
		return ret
	}
	return o.Versions
}

// GetVersionsOk returns a tuple with the Versions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FlyTLSOptions) GetVersionsOk() ([]string, bool) {
	if o == nil || IsNil(o.Versions) {
		return nil, false
	}
	return o.Versions, true
}

// HasVersions returns a boolean if a field has been set.
func (o *FlyTLSOptions) HasVersions() bool {
	if o != nil && !IsNil(o.Versions) {
		return true
	}

	return false
}

// SetVersions gets a reference to the given []string and assigns it to the Versions field.
func (o *FlyTLSOptions) SetVersions(v []string) {
	o.Versions = v
}

func (o FlyTLSOptions) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o FlyTLSOptions) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Alpn) {
		toSerialize["alpn"] = o.Alpn
	}
	if !IsNil(o.DefaultSelfSigned) {
		toSerialize["default_self_signed"] = o.DefaultSelfSigned
	}
	if !IsNil(o.Versions) {
		toSerialize["versions"] = o.Versions
	}
	return toSerialize, nil
}

type NullableFlyTLSOptions struct {
	value *FlyTLSOptions
	isSet bool
}

func (v NullableFlyTLSOptions) Get() *FlyTLSOptions {
	return v.value
}

func (v *NullableFlyTLSOptions) Set(val *FlyTLSOptions) {
	v.value = val
	v.isSet = true
}

func (v NullableFlyTLSOptions) IsSet() bool {
	return v.isSet
}

func (v *NullableFlyTLSOptions) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFlyTLSOptions(val *FlyTLSOptions) *NullableFlyTLSOptions {
	return &NullableFlyTLSOptions{value: val, isSet: true}
}

func (v NullableFlyTLSOptions) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFlyTLSOptions) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


